/* Set up & Mobile first (nexus 5) */

html {
  height: 100%;
  box-sizing: border-box;
  font-size: 1em;
}

html, body {
  width: 100%;
  margin: 0;
  padding: 0;
}

body {
  box-sizing: border-box;
  min-height: 100%;
  /* BentOnCoding explained that body should have a min-height of 100% if the content needs to change dynamically, which might be the case in this app.
  Source: https://stackoverflow.com/questions/6654958/make-body-have-100-of-the-browser-height */
  background-color: #b9b8bf;
  background-image: url("https://www.transparenttextures.com/patterns/brick-wall-dark.png");
/* This is mostly intended for prototyping; please download the pattern and re-host for production environments. Thank you! */
}

.container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
}

h1 {
  text-align: center;
  font-size: 2em
}

li, p {
  text-align: justify;
}


.header {
  width: 100%;
  border-width: 0 0 1px;
  border-color: #ffffff;
  border-style: solid;
}


.rules {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  border-width: 0 0 1px;
  border-color: #ffffff;
}

h2 {
  width: 100%;
  text-align: center;
}

.list-instructions {
}

.statistics {
  width: 100%;
  border-width: 0 0 1px;
  border-color: #ffffff;
  border-style: solid;
}

/* Create flex-box for the stars */
#rating-star {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  list-style: none;
  padding: 0;
  margin: 0;
}

/* Create flex-box for the additional-data */
.additional-data {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  list-style: none;
  padding: 0;
  margin: 0;
}

/* Create flex-box for the button */
.control-buttons {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
  margin: 0;
}

/* Create flex-box for the board game */

.game-board {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  padding: 0;
  margin: 0;
  border: 1px solid #ffffff;
}

#area-of-game {
  width: 95%;
  border: 1px solid #ffffff;
  display: flex;
  flex-wrap: wrap;
  list-style: none;
  justify-content: center;
  padding: 0;
  margin: 0;
}

.card {
  border: 5px outset #00BFFF;
  display: inline-block;
  text-align: center;
  /*
  Background color black as long
  as I do not manage to change the visibility of the childCards aka drawingOfTheCard
  */
  margin: 5px;
  width: 20%;
}

.card .fas {
  font-size: 48px;

}

.flip {
  background-color: white;
  transform: rotateX(180deg);
  transition: 0.5s;
}

.matched {
  transform: rotateX(180deg);
  transition: 1s;
  background: linear-gradient(blue, red);
  delay: 0.5s;
  pointer-events: none;
}


.not-matched {
  transform: rotateX(180deg);
  transition-delay: 3s;
  transition: 1s;
  background: linear-gradient(white, gray);
}

/* Pop from W3C */

/* Popup container */
.popup {
    display: flex;
    flex-direction: column;
    justify-content: center;
    cursor: pointer;
}

/* The actual popup (appears on top) */
.popup .popuptext {
    visibility: hidden;
    width: 300px;
    background-color: #555;
    color: #fff;
    text-align: center;
    border-radius: 6px;
    z-index: 1;
}

/* Popup arrow */
.popup .popuptext::after {
    content: "";
    position: absolute;
    top: 100%;
    left: 50%;
    margin-left: -5px;
    border-width: 5px;
    border-style: solid;
    border-color: #555 transparent transparent transparent;
}

#final-score li {
  display: inline-block;
  list-style:none;

}

/* Toggle this class when clicking on the popup container (hide and show the popup) */
.popup .show {
    visibility: visible;
    -webkit-animation: fadeIn 1s;
    animation: fadeIn 1s
}

/* Add animation (fade in the popup) */
@-webkit-keyframes fadeIn {
    from {opacity: 0;}
    to {opacity: 1;}
}

@keyframes fadeIn {
    from {opacity: 0;}
    to {opacity:1 ;}
}
